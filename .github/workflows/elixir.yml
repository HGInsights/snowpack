name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  otp-version: '23.3.2'
  elixir-version: '1.11.4'
  snowflake-version: '2.23.1'

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1

    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        include:
          - elixir: '1.11.4'
            otp: '23.3.2'
            ubuntu: 'focal-20210325'
          - elixir: '1.12.3'
            otp: '24.1.2'
            ubuntu: 'focal-20210325'

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download released earthly
        run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"

      - name: Execute Static Code Analysis & Tests
        run: |
          earthly --ci \
            --build-arg ELIXIR=${{ matrix.elixir }} \
            --build-arg OTP=${{ matrix.otp }} \
            --build-arg UBUNTU=${{ matrix.ubuntu }} \
            --build-arg SNOWFLAKE_VERSION=${{ env.snowflake-version }} \
            --secret SNOWPACK_SERVER="${{ secrets.SNOWPACK_SERVER }}" \
            --secret SNOWPACK_PRIV_KEY="${{ secrets.SNOWPACK_PRIV_KEY }}" \
            +all

  semantic_release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs:
      - tests
    outputs:
      next-version: ${{ steps.get_next_version.outputs.next-version }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 16
          branches: |
            [
              '+([0-9])?(.{+([0-9]),x}).x',
              'main',
              'next',
              'next-major',
              {
                name: 'beta',
                prerelease: true
              },
              {
                name: 'alpha',
                prerelease: true
              }
            ]
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/changelog
            @semantic-release/github
            @semantic-release/git

      - name: Output Next Release Version
        id: get_next_version
        run: |
          if [ -f "version" ]; then
            VERSION=`cat version`
            echo "::set-output name=next-version::$VERSION"
          else
            VERSION=''
            echo "Next release version not set. No release."
          fi
          echo "::set-output name=next-version::$VERSION"

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs:
      - tests
      - semantic_release
    if: ${{ github.ref == 'refs/heads/main' && needs.semantic_release.outputs.next-version != '' }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup
        uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ env.otp-version }}
          elixir-version: ${{ env.elixir-version }}

      - name: Retrieve Cached Dependencies
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: |
            deps
            _build
            priv/plts
          key: ${{ runner.os }}-${{ env.otp-version }}-${{ env.elixir-version }}-${{ hashFiles('mix.lock') }}

      - name: Generate Docs
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix docs

      - name: Deploy Docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./doc
