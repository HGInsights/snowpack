name: CI

on:
  pull_request:
  push:
    branches:
    - main
    tags:
    - '*'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SNOWPACK_SERVER: ${{ secrets.SNOWPACK_SERVER }}
  SNOWPACK_PRIV_KEY: ${{ secrets.SNOWPACK_PRIV_KEY }}
  SNOWPACK_PRIV_KEY_FILE: /tmp/rsa_key.p8
  SNOWPACK_DRIVER: /home/runner/work/snowpack/snowpack/snowflake_odbc/lib/libSnowflake.so

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    strategy:
      matrix:
        include:
          - pair:
              elixir: "1.13.3"
              otp: "24.0.5"
              driver: "2.25.0"
            lint: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Elixir Project
        uses: ./.github/actions/elixir-setup
        with:
          elixir-version: ${{ matrix.pair.elixir }}
          otp-version: ${{ matrix.pair.otp }}
          build-flags: --all-warnings --warnings-as-errors

      - name: Install unixODBC
        run: |
          sudo apt-get update
          sudo apt-get install unixodbc

      - name: Install Snowflake Driver
        run: |
          curl --output snowflake_linux_x8664_odbc-${{matrix.pair.driver}}.tgz \
            https://sfc-repo.snowflakecomputing.com/odbc/linux/${{matrix.pair.driver}}/snowflake_linux_x8664_odbc-${{matrix.pair.driver}}.tgz \

          gunzip snowflake_linux_x8664_odbc-${{matrix.pair.driver}}.tgz
          tar -xvf snowflake_linux_x8664_odbc-${{matrix.pair.driver}}.tar

          cd snowflake_odbc
          sudo ./unixodbc_setup.sh

      - name: Put Private Key in File
        run: |
          echo "${{ secrets.SNOWPACK_PRIV_KEY }}" >> /tmp/rsa_key.p8

      - name: Run Tests
        run: mix coveralls --raise --exclude skip_ci:true
        if: always()

  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      last_release_version: ${{ steps.semantic.outputs.last_release_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Semantic Release
        id: semantic
        uses: hgdata/semantic-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_REPO_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          extends: |
            @hgdata/semantic-release-config

  publish-hex-package:
    name: Publish Hex Package ⬆️☁️
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    env:
      MIX_ENV: docs
    needs:
      - test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Elixir project
        uses: ./.github/actions/elixir-setup
        with:
          elixir-version: "1.13.3"
          otp-version: "24.0.5"
          build-app: false

      - name: Generate documentation
        run: mix docs

      - name: Determine the tag version
        env:
          GITHUB_REF: ${{ github.ref }}
        run: echo "TAG=$(echo "$GITHUB_REF" | awk -F / '{print $3}')" >> $GITHUB_ENV

      - name: Publish library
        run: mix hex.publish --yes
        env:
          APP_VERSION: ${{ env.TAG }}
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
